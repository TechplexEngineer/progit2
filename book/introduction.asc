[preface]
== Introduktion

Du kommer nu att spendera många timmar av ditt liv med att läsa om Git. Låt oss ta en minut för att
förklara vad du har framför dig. Här är en summering av de tio kapiltena och de tre bilagorna till boken.

I *Kapitel 1* kommer vi gå igenom konceptet versionshanteringssystem (VCS) och grunder i Git -- inget
tekniskt, utan bara vad Git är, hur det kom till i en värld full av andra versionshanteringssystem,
vad som skiljer det och varför så många använder det. Därefter kommer vi förklara hur man laddar ner Git och konfigurerar det för första gången, ifall du inte redan har det installerat.

I *Kapitel 2* kommer vi att gå igenom grundläggande användning av Git -- hur man använder git i 80% av 
fallen som du kommer att träffa på oftast. Efter att ha läst detta kapitlet kommer du kunna klona ett
bibliotek, se vad som har hänt i projekthistoriken, modifiera filer och bidra med ändringar. Om boken
spontant skulle självantända vid denna tidpunkten så kan du redan hantera Git hjälpligt innan du har
hunnit skaffa en ny kopia.

*Kapitel 3* handlar om Gits grenmodell, som ofta kallas Gits vassaste säregenskap. Här kommer du
lära dig vad som verkligen skliljer Git från mängden. När du är klar, kan du känna att du behöver spendera en tyst minut och kontemplera över hur du levde innan Gits förgreningar var en del av ditt liv.

*Kapitel 4* täcker in Git på servern. Detta kapitel är för er som vill använda Git inom er organisation,
eller på din egna server för att samarbeta. Vi kommer också att undersöka olika tjänster för detta, om duföredrar att låta någon annan hantera det åt dig.

*Kapitel 5* kommer att, i detalj, gå igenom olika distribuerade arbetsflöden och hur man åstadkommer dem
med Git. När du är klar med detta kapitel, kommer du kunna arbeta flytande med multipla fjärrbibliotek,
använda Git över email och skickligt jonglera med flertalet fjärrgrenar och delgivna patchar.

*Kapitel 6* täcker GitHubs tjänst och verktyg på djupet. Vi behandlar medlemskap och hantering av ett konto, skapa och använda Gitbibliotek, vanliga arbetsflöden för att bidra till projekt och för att acceptera 
bidrag till dina projekt, GitHubs programmatiska gränssnitt och många små tips för att göra ditt liv lite lättare generellt.

*Kapitel 7* handlar om avancerade Gitkommandon. Här kommer du lära dig sådant som att bemästra det
skrämmadnde kommandot 'reset', använda binärsökning för att identifiera buggar, ändra historiken, välja revision i detalj och mycket mer. Detta kapitel kommer att runda av din kunskap om Git soh att du är en
sann mästare.

*Kapitel 8* handlar om konfiguration av din egna Gitmiljö. Detta inkluderar att sätta up skriptkrokar för
att påtvinga eller uppmuntra skräddarsydda policier och använda miljökonfigurationsinställningar så att
du kan jobba på det sätt du vill. Vi kommer också gå igenom hur du bygger en egen uppsättning script för
att påtvinga en skräddarsydd commit-policy.

*Kapitel 9* går igenom Git och andra versionshanteringssystem. Detta inkluderar Git i en Subversion (SVN)
värld och konvertera projekt från andra system till Git. Många organisationer använder fortfarande SVN
och tänker inte byta, men vid detta ögonblick har du lärt dig den otroliga styrkan i Git -- och detta
jaoutel visar dig hur du kan stå ut om du fortfarande måste använda SVN server. Vi täcker även in hur man importerar projekt från olika system ifall du lyckas övertycka alla att väl göra bytet.

*Kapitel 10* dyker ner i det dunkla men vackra djupet i Gits innanmäte. Nu när du kan allt om git och kan
hantera det med styrka och stil, kan du gå vidare och diskutera hur Git sparar sina objekt, vad
objektmodellen är, detaljer i packfiler, serverprotokoll, och mer. Boken genomsyras av referenser till
olika stycken i detta kapitel, om du känner att du vill dyka djupt just där och då; men om du, liksom oss, vill dyka ner i de tekniska detljerna, såp kanske du vill läsa Kapitel 10 först.
Det är upp till dig.

I *Appendix A* kommer vi se ett antal exempel på att använda Git i olika specifika miljöer. Vi täcker ett
antal olika grafiska användargränssnitt och utvecklingsmiljöer som du kanske vill använda Git med och
vad sin finns tillgängligt. Om du är intresserad av en översikt av att använda Git i ditt skal, i Visual 
Studio eller Eclipse, kolla här!


I *Appendix B* utforskar vi scripting och förlänger Git genom verktyg som libgit2 och JGit. Om du är intresserad av at skriva komplexa och och snabba skräddarsydda verktyg och älskar Git på låg nivå är
det här du kan se hur landskapet ser ut.

Slutligen, i *Appendix C*, går vi igenom alla vanliga Gitkommandon ett och ett med en tillbakablick över var i boken vi behandlade dem och vad vi gjorde med dem. Om du vill veta var i boken vi använde ett specifikt
Gitkommando, så kan du ta reda på det här.

Nu kör vi igång.
